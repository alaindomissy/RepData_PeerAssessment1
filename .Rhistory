install.packages("shiny")
library("shiny", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
install.packages("swirl")
library("swirl", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
?lm
z
?c
c(z,555,z)
z*2 +100
mySqrt<-sqr(z-1)
mySqrt<-sqrt(z-1)
mySqrt
myDiv=z / mySqrt''
myDiv=z / mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
?plot
?line
?lines
a<-rorm(10,2)
a<-rnorm(10,2)
hist (a)
20
a<-rnorm(20,2)
plot(a)
a<-rnorm(20,10,5)
hist(a)
hist(a,breaks=10)
a
a<-c(2,3,4,4,5,5,5,5,6,6,7,8)
hist(a)
hist(a,breaks=10)
a<-c(2,3,4,4,4,5,5,5,5,5,5,6,6,6,7,8)
hist(a,breaks=10)
hist(a,breaks=20)
hist(a,breaks=20)
hist(a,breaks=30)
a<-c(2,3,4,4,5,5,5,5,6,6,7,8, 12,13,14,14,15,15,15,15,16,16,17,18 )
hist(c)
a<-c(2,3,4,4,5,5,5,5,6,6,7,8, 12,13,14,14,15,15,15,15,16,16,17,18)
a
hist(a)
hist(a,breaks=100)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llines
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?trellis.par.set()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?qplot
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
View(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library("ggplot2", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
View(airquality)
View(airquality)
str(airquality)
View(airquality)
View(airquality)
View(airquality)
View(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
View(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?geom
??geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
library("knitr", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
detach("package:knitr", unload=TRUE)
library("knitr", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
datasets
dataset
libray(datasets)
library(datasets)
cars
airquality
detach("package:knitr", unload=TRUE)
library("knitr", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
data?
)
?data
data
data()
data(Nile)
View(cars)
View(airquality)
View(airquality)
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
View(airquality)
View(airquality)
pwd
pwd()
getwd
getwd()
?qplot
library("ggplot2", lib.loc="/home/alain/R/i686-pc-linux-gnu-library/3.1")
?qplot
movies
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library("stats4", lib.loc="/usr/lib/R/library")
library("stats4", lib.loc="/usr/lib/R/library")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stat_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stat_smooth()
qplot(votes, rating, data = movies) + stat_smooth('loess')
qplot(votes, rating, data = movies) + stat_smooth(method='loess')
qplot(votes, rating, data = movies) + stat_smooth()
?xyplot
library("lattice", lib.loc="/usr/lib/R/library")
?xyplot
apropos("^panel")
?panel
?panel.abline
?lline
?llines
setwd("~/Courses/DataScienceSpecialization/5-reproducible-research/peer-assessment-1/RepData_PeerAssessment1")
data<- read.csv('activity.csv',header=TRUE, colClasses=c('numeric','Date','numeric'), na.strings='NA' )
data$interval<-as.factor(data$interval)
str(data)
?aggregate
View(data)
setwd("~/Courses/DataScienceSpecialization/5-reproducible-research/peer-assessment-1/RepData_PeerAssessment1")
steps<- read.csv('activity.csv',header=TRUE, colClasses=c('numeric','Date','numeric'), na.strings='NA' )
# convert third column to a factor
steps$interval<-as.factor(steps$interval)
str(steps)
setwd("~/Courses/DataScienceSpecialization/5-reproducible-research/peer-assessment-1/RepData_PeerAssessment1")
activity<- read.csv('activity.csv',header=TRUE, colClasses=c('numeric','Date','numeric'), na.strings='NA' )
# convert third column to a factor
str(activity)
dailytotals <- aggregate(steps ~ date, data = data, FUN = sum)
dailytotals <- aggregate(steps ~ date, data = activity, FUN = sum)
View(dailytotals)
mean(dailytotals$steps)
meandailysteps  <- round(mean(dailytotals$steps),0)
?plot
View(activity)
View(activity)
View(activity)
